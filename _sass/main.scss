/* fonts */
$fnt-serif: 'Crimson Text', serif;
$fnt-sans: 'Open Sans', sans-serif;

/* --------------------------------------------- */

$red: #F86363;

$blue-electric: #777CFD;
$blue-light: #C9CBFF;
$blue-dark: #040639;
$blue: #1A1C63;

$off-white: #FFF4ED;

$card-color: #414242;
$card-shadow: #00000025;


html {
  scroll-behavior: smooth; //scrolls smooth down to sections on same page link
  min-height: 100vh;
  overflow-x: hidden;

  //custom cursor
  //cursor: url($baseurl + "/assets/icons/moon.svg"), auto;

}

body {
  margin: 0;
}

/********************************/
/* header */
header {
    // height: 5vh;
    // display: flex;
    // flex-direction: column;
    // justify-content: center;
}

#nav ul {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}

#nav li {
  list-style: none;

  :hover {
    opacity: 50%;
  }
}

#nav a {
  font-size: 1.25rem;

  font-family: $fnt-sans;
  color: white;
  font-weight: bold;
  text-decoration: none;
  margin-right: 1rem;
}

/********************************/
/* components */

.card {
    display: flex;
    flex-direction: column;
    align-items: center;

    background: $card-color;
    border-radius: 15px;
    box-shadow: 0px 4px 8px 4px $card-shadow;

    // border-radius: 15px;
    text-align: center;

    padding: 1.5rem;
    margin-bottom: 1rem;
    margin-top: 1rem;

    /* font and colors */
    font-family: 'Open Sans', sans-serif;
    color: white;
}

/********************************/
/* landing section */
#landing {
  height: 65vh; //any scrolling brings to next section
  min-height: 50rem; //to prevent title card from flowing onto next page
  background: $blue-electric;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow-x: hidden; //hide out of bounds shapes
}

#landing .content {
  position: absolute;
  align-self: center;
  margin-bottom: 10vh;
}

#landing .card {
  margin-top: 10vh;
}

#profile-pic {
    height: 150px;
    width: 150px;
    background: $red;
    border-radius: 100%;
}

#social-bar {
    justify-content: space-between;

    .icon:hover {
      opacity: 50%;
    }
}

#dive-in {
  text-align: center;
  text-decoration: none;
  color: white;
  font-family: $fnt-sans;
  margin: auto;
  padding-top: 5rem;
}

#dive-in:hover {
  opacity: 50%;

  img {
    animation: bounce ease-out 1s infinite;
  }
}

@keyframes bounce {
  50% { transform: translateY(.5rem) }
}


/* background shapes */
$shape-size: 1; //base size of shapes
$shape-size-variation: 2; //max size can deviate from base

$shape-colors: #45ffdc, #ffef96, #ff94a1, #cda1ff, #31b4ff, #4800c0, #9300c9; //list of shape color options
$shapes: '\25B3', '\25C7', '\25CF', '\25EF',  '\25A0', '\25A1', '\25B7', '\25A1', '\25CB';
$shape-count: 50; //number of total shapes

$blur-minimum: .5; //lowest percentage possible to be blurred
$opacity-minimum: .8; //lowest percentage possible to be transparent

#geometric-background {
  position: relative;
  overflow: hidden;
}

.random-shape::before {
  content: "/f04d";
}

/*
 * This loop iterates through and assigns formatting to each of the $shape-count
 * number of random shapes. This assigns random values for shape, color, and blur.
 * JS does the actual creation of HTML tags but this creates custom formatting with the
 * naming schema as .shape-container--i where i is the number.
 */
@for $i from 1 through $shape-count {
  $cur-size: $shape-size + random($shape-size-variation); //THIS shape's size is some deviation from the base
  $rotation: random(360); //random rotation
  $blur: 1 - $blur-minimum * random();
  $opacity: 1 - $opacity-minimum * random();

  $color-index: random(length($shape-colors)); //random color from available
  $shape-color: nth($shape-colors, $color-index);

  $shape-index: random(length($shapes));
  $shape-type: nth($shapes, $shape-index);

  .shape-container--#{$i} {

    transform: rotate(#{$rotation}deg);
    filter: blur(#{$blur}px);

    .random-shape::before {
      font-size: #{$cur-size}rem;
      color: $shape-color;
      content: $shape-type;
      opacity: $opacity;
    } //.random-shape
  } //.shape-container--1
} //for

/* waves transition */
$wave-count: 4;

#wave-container {
  overflow: hidden;
}

.wave {
  position: absolute;
  width: 200%;
}

@keyframes wave {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-50%);
  }
}

@for $i from 1 through $wave-count {
  .wave:nth-child(#{$i}) {
    animation-delay: #{random(100)}ms;
    animation: wave linear #{random(5) + 2}s infinite;
  } //.wave:nth-child
} //for





/********************************/
/* info section */
#info {
  padding-top: 40rem;
  background: $off-white;
}

#info .content {}

/* skills bars */
.skill-name {}

.skill-bar {}

.skill-bar-filled {}

.skill-percentage {}

/********************************/
/* project section */
#projects {}

#projects .content {}

/********************************/
/* general */
.center {
    text-align: center;
}

.content {
  width: 60%;
}

.vertical-container {
    display: flex;
    flex-direction: column;
    margin: auto;
}

.horizontal-container {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin: auto;
}

.icon {
    width: 1.5rem;
    height: 1.5rem;
    padding: .5rem;
}
